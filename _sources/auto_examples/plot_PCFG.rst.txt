
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_PCFG.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_PCFG.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_PCFG.py:


Abstracted PCFGs
================

This is an example of defining a simple discrete RBN equivalent to a PCFG.

.. GENERATED FROM PYTHON SOURCE LINES 9-12

Defining the PCFG
-----------------
We use an :class:`AbstractedPCFG <rbnet.pcfg.AbstractedPCFG>`

.. GENERATED FROM PYTHON SOURCE LINES 12-14

.. code-block:: Python

    from rbnet.pcfg import AbstractedPCFG








.. GENERATED FROM PYTHON SOURCE LINES 15-16

First we define a number of words (terminal symbols) of different categories that sentences can be composed of:

.. GENERATED FROM PYTHON SOURCE LINES 16-24

.. code-block:: Python

    subjects = ["I", "You", "We", "They"]
    verbs = ["run", "drink", "sleep"]
    adverb_non_gradable = ["a-lot", "alone"]
    adverb_gradable = ["fast", "slowly", "quickly"]
    grade = ["very", "veeery", "really"]
    verb_qualifier = ["rarely", "do-not", "never", "always"]
    terminals = subjects + verbs + adverb_non_gradable + adverb_gradable + grade + verb_qualifier








.. GENERATED FROM PYTHON SOURCE LINES 25-26

Then we define some non-terminals symbols (a start symbol and one symbol for each category of words used above):

.. GENERATED FROM PYTHON SOURCE LINES 26-34

.. code-block:: Python

    non_terminals = ["start",
                     "subject",
                     "verb",
                     "gradable_adverb",
                     "non_gradable_adverb",
                     "verb_qualifier",
                     "grade"]








.. GENERATED FROM PYTHON SOURCE LINES 35-36

Finally, we define the rules and give them a weight (for simplicity we use a weight of 1 everywhere):

.. GENERATED FROM PYTHON SOURCE LINES 36-50

.. code-block:: Python

    non_terminal_rules = [("start --> subject verb", 1),
                          ("verb --> verb_qualifier verb", 1),
                          ("verb --> verb gradable_adverb", 1),
                          ("verb --> verb non_gradable_adverb", 1),
                          ("gradable_adverb --> grade gradable_adverb", 1),
                          ("grade --> grade grade", 1)]
    terminal_rules = []
    for non_terminal_symbol, corresponding_list_of_terminal_symbols in zip(
            non_terminals[1:],  # skip the start symbol
            [subjects, verbs, adverb_gradable, adverb_non_gradable, verb_qualifier, grade]
    ):
        for terminal_symbol in corresponding_list_of_terminal_symbols:
            terminal_rules.append((f"{non_terminal_symbol} --> {terminal_symbol}", 1))








.. GENERATED FROM PYTHON SOURCE LINES 51-52

Now we can define our PCFG by providing it with the terminals, non-terminals, rules, and start symbol.

.. GENERATED FROM PYTHON SOURCE LINES 52-56

.. code-block:: Python

    pcfg = AbstractedPCFG(terminals=terminals,
                          non_terminals=non_terminals,
                          rules=non_terminal_rules + terminal_rules,
                          start="start")




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/runner/work/RBN/RBN/rbnet/util.py:299: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at ../torch/csrc/utils/tensor_new.cpp:278.)
      return torch.tensor(t)




.. GENERATED FROM PYTHON SOURCE LINES 57-61

Parsing Sentences
-----------------
Let's test the grammar by computing the marginal likelihood of some grammatical sentences
(which should be greater than zero) and for some un-grammatical ones (which should have zero marginal likelihood)

.. GENERATED FROM PYTHON SOURCE LINES 61-77

.. code-block:: Python


    grammatical_sentences = [
        "I run",
        "You never run",
        "We run very veeery slowly",
        "They always run alone",
        "I never sleep really very quickly",
        "You do-not drink very quickly"]
    ungrammatical_sentences = [
        "I You",
        "run fast"
    ]
    for sentence in grammatical_sentences + ungrammatical_sentences:
        marginal_likelihood = pcfg.inside(sequence=sentence.split())
        print(f"{sentence} --> {marginal_likelihood}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    I run --> 0.041666667908096755
    You never run --> 0.0017361111240322576
    We run very veeery slowly --> 1.3563368156502012e-05
    They always run alone --> 0.00028935185400537626
    I never sleep really very quickly --> 1.130280679708501e-06
    You do-not drink very quickly --> 9.042245437668008e-06
    I You --> -5.4372458772976525e-24
    run fast --> -2.0901856201675087e-24




.. GENERATED FROM PYTHON SOURCE LINES 78-80

We can also print a simple textual visualisation of the parse chart, which shows
``non-terminal symbol|inside probability`` at each location

.. GENERATED FROM PYTHON SOURCE LINES 80-82

.. code-block:: Python

    pcfg.inside(sequence="You never run".split())
    print(pcfg.map_inside_chart(precision=2).pretty())




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

                                       ╱╲                                   
                                      ╱  ╲                                  
                                     ╱    ╲                                 
                                    ╱      ╲                                
                                   ╱        ╲                               
                                  ╱          ╲                              
                                 ╱            ╲                             
                                ╱              ╲                            
                               ╱                ╲                           
                              ╱                  ╲                          
                             ╱                    ╲                         
                            ╱        start|1.74e-03╲                        
                           ╱╲                      ╱╲                       
                          ╱  ╲                    ╱  ╲                      
                         ╱    ╲                  ╱    ╲                     
                        ╱      ╲                ╱      ╲                    
                       ╱        ╲              ╱        ╲                   
                      ╱          ╲            ╱          ╲                  
                     ╱            ╲          ╱            ╲                 
                    ╱              ╲        ╱              ╲                
                   ╱                ╲      ╱                ╲               
                  ╱                  ╲    ╱                  ╲              
                 ╱                    ╲  ╱                    ╲             
                ╱                    []╲╱         verb|6.94e-03╲            
               ╱╲                      ╱╲                      ╱╲           
              ╱  ╲                    ╱  ╲                    ╱  ╲          
             ╱    ╲                  ╱    ╲                  ╱    ╲         
            ╱      ╲                ╱      ╲                ╱      ╲        
           ╱        ╲              ╱        ╲              ╱        ╲       
          ╱          ╲            ╱          ╲            ╱          ╲      
         ╱            ╲          ╱            ╲          ╱            ╲     
        ╱              ╲        ╱              ╲        ╱              ╲    
       ╱                ╲      ╱                ╲      ╱                ╲   
      ╱                  ╲    ╱                  ╲    ╱                  ╲  
     ╱                    ╲  ╱                    ╲  ╱                    ╲ 
    ╱       subject|2.5e-01╲╱verb_qualifier|2.5e-01╲╱         verb|1.67e-01╲





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.026 seconds)


.. _sphx_glr_download_auto_examples_plot_PCFG.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_PCFG.ipynb <plot_PCFG.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_PCFG.py <plot_PCFG.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_PCFG.zip <plot_PCFG.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
